package minic;
import static minic.Token.*;
%%
%class Lexer
%type Token
%line
%column
ESPACIO = [ \n\t\r]
RESERVADAS = void | int | double | bool | string | class | interface | null | this | extends | implements | for | while | if | else | return | break | New | NewArray
CARACTERES =  "+" | "-" | "*" |"/" | "%" | "<" | "<=" | ">" | ">=" | "=" | "==" | "!=" | "&&" | "||" | "!" | ";" | "," | "." | "[" | "]" | "(" | ")" | "{" | "}" | "[]" | "()" | "{}"
BOOLEANAS = true | false;
%{
        public String analizar;
        public int linea,columna;
%}
%%
{ESPACIO} {/*Ignore*/}

/* PALABRAS RESERVADAS */
{RESERVADAS} {analizar=yytext(); linea=yyline; columna=yycolumn; return Palabra_Reservada;}

/* IDENTIFICADORES */
[a-zA-Z][a-zA-Z0-9_]* {analizar=yytext(); linea=yyline; columna=yycolumn; return Identificador;}

/* ERRORES */
"/*" [^*]+ {analizar=yytext(); linea=yyline; columna=yycolumn; return Comentario_Incompleto;}

/* OPERADORES Y CARACTERES */
{CARACTERES} {analizar=yytext(); linea=yyline; columna=yycolumn; return Caracter;}

/* STRINGS */
\" [^\r\n]+  \" {analizar=yytext(); linea=yyline; columna=yycolumn; return String;}

/* COMENTARIOS */ 
"/*" [^]* "*/" {/*Ignore*/}  /* COMENTARIO MULTILINEA */
"//" [^\r\n]+  {/*Ignore*/}   /* COMENTARIO DE UNA LINEA */

/* CONSTATES BOOLEANAS */
{BOOLEANAS} {analizar=yytext(); linea=yyline; columna=yycolumn; return Constante_Booleana;}

/* NUMEROS ENTEROS */
[-+]? [0-9]+ {analizar=yytext(); linea=yyline; columna=yycolumn; return Numero_Entero;}

/* CONSTANTE DOUBLE (NUMEROS) */
[-+]?  [0-9]+ "." ([0-9]+ | [0-9]+(E | e) ("+" | "-") [0-9]+ | (E | e) ("+" | "-") [0-9]+ )? {analizar=yytext(); linea=yyline; columna=yycolumn; return Double;}

/* NUMEROS HEXADECIMALES */
[-+]? (0x | 0X )[0-9|A-F|a-f]+ {analizar=yytext(); linea=yyline; columna=yycolumn; return Numero_Hexadecimal;}

/* ERROR */
. {analizar=yytext(); linea=yyline; columna=yycolumn; return ERROR;}